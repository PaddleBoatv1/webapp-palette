
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vstqtcvwnvkcdrxteubg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZzdHF0Y3Z3bnZrY2RyeHRldWJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM1MTk0NDcsImV4cCI6MjA1OTA5NTQ0N30.NdXDXoEyNmW309tSXCTiFu_MPmpP1TrD0FKPgf-nK2w";

// Create the Supabase client with retry options
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true
    },
    global: {
      fetch: function(url, options) {
        console.log('Supabase fetch request:', url);
        return fetch(url, options);
      }
    }
  }
);

// Add custom RPC function type declarations
declare module '@supabase/supabase-js' {
  interface SupabaseClient<Schema extends any> {
    rpc<T = any>(
      fn: 
        | "assign_delivery_job" 
        | "exec_sql" 
        | "increment_count" 
        | "is_admin" 
        | "is_liaison"
        | "update_delivery_job_assignment", // Add the new function here
      params?: object,
      options?: any
    ): import('@supabase/supabase-js').SupabasePromise<{ data: T, error: Error }>;
  }
}
